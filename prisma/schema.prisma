generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./nanopos.db"
}

enum ButtonName {
  BTN1
  BTN2
  BTN3
  BTN4
  BTN5
  BTN6
  BTN7
  BTN8
  BTN9
  BTN10
}

enum MetricUnit {
  UNIT
  GRAM
  LITER
}

model Device {
  id           String     @id
  label        String?
  location     String?
  firmwareVersion     String?
  isOnline     Boolean?   
  synced       Boolean    @default(false)
  owner        String?
  createdAt    DateTime?  @default(now())
  updatedAt    DateTime?  @updatedAt

  events        PosEvent[]
  buttonConfigs ButtonConfig[]   // ‚Üê relation to ButtonConfig
}

model Category {
  id          String     @id
  name        String
  description String?
  synced      Boolean    @default(false)
  isDeleted   Boolean    @default(false)
  owner       String
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @updatedAt

  products   Product[]
}

model Product {
  id          String     @id
  name        String
  price1      Float
  price2      Float?
  price3      Float?
  cost        Float?
  metric      MetricUnit
  sku         String?
  isActive    Boolean    @default(true)
  synced      Boolean    @default(false)
  isDeleted   Boolean    @default(false)
  owner       String
  categoryId  String
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @updatedAt

  category   Category   @relation(fields: [categoryId], references: [id])
  buttonConfigs ButtonConfig[]
  eventProducts   PosEventProduct[]  
}

model ButtonConfig {
  id          String      @id @default(cuid())
  deviceId    String
  button      ButtonName
  productId   String
  priceTier   Int
  synced      Boolean      @default(false)
  owner       String
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @updatedAt

  device      Device       @relation(fields: [deviceId], references: [id])
  product     Product      @relation(fields: [productId], references: [id])

  @@unique([deviceId, button])
}

model PosEvent {
  id          String     @id
  deviceId    String
  cancelled   Boolean    @default(false)
  synced      Boolean    @default(false)
  owner       String
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @updatedAt

  device      Device    @relation(fields: [deviceId], references: [id])
  products    PosEventProduct[]
}

model PosEventProduct {
  id           String    @id @default(cuid())
  posEventId   String
  productId    String
  weightGrams  Float?
  quantity     Int?
  priceApplied Float
  synced       Boolean   @default(false)
  owner       String
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @updatedAt

  event   PosEvent  @relation(fields: [posEventId], references: [id])
  product    Product   @relation(fields: [productId], references: [id])
}